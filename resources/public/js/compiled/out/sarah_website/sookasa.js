// Compiled by ClojureScript 1.9.229 {}
goog.provide('sarah_website.sookasa');
goog.require('cljs.core');
goog.require('sarah_website.recos');
goog.require('sarah_website.work');
goog.require('sarah_website.footer');
goog.require('sarah_website.nav');
sarah_website.sookasa.sookasa_case = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.container-lrg","div.container-lrg",1430040229),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"h1.center","h1.center",-1335697076),"Sookasa People Tab Redesign"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"section","section",-300141526),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.flex","div.flex",-396986231),new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.col-8","div.col-8",335264244),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"This piece was originally written for the Sookasa blog"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"Sookasa enables\u00A0companies to use the tools they love, like Dropbox and Google Drive, while remaining secure and compliant.\u00A0We believe it\u2019s essential in an industry like ours to rely on user-centered design: For something as sensitive (and complex) as securing data, providing a\u00A0seamless experience helps customers feel confident and empowered.\u00A0A few months ago, the Product team realized it was time to rethink how the various features on our app come together.\u00A0As a lean customer-driven startup, we\u2019re rapidly adding features our users need and want for their work. But this adds a lot of complexity to our app, and\u00A0since we launched publicly in April 2014, we hadn\u2019t yet optimized how all our new features came together."], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"img","img",1442687358),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"src","src",-1651076051),"https://saraharnegard.files.wordpress.com/2017/06/old-people-tab.png",new cljs.core.Keyword(null,"alt","alt",-3214426),"old-people-tab"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"The old version of the people tab"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"We decided to begin with the People\u00A0tab. In many ways, this is the most important part of our app for administrators. Fundamentally, Sookasa is a different kind of security solution because it enables collaboration rather than restricts it.And it all starts on the People tab, which is the primary place to\u00A0manage team and external sharing permissions. We knew the People tab was poorly organized \u2014 it was unclear how people were grouped, and difficult to find who admins were looking for. It needed to change."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"To learn how to approach the redesign, we sat down with customers who manage teams on Sookasa. Talking to customers is at the core of our design process: We have to understand their workflows in order to understand the problems that existed with the People tab. Through our research, we identified four main types of people that team admins manage: team members; peoplewho have been added to their team, but don\u2019t have active accounts; external partners, and external partners who have not accepted an invite to join Sookasa."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"The old design had shied away from being explicit about these distinctions, in part because we feared the differences weren\u2019t well understood by users. Through testing, however, we discovered we couldn\u2019t have been more wrong. These distinctions\u00A0were integral to the way users interact with the product. And not only did the current design make it difficult to discern who fit into each category, it was also too disorganized."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"After all, a lot has to happen on the People tab: We could see that users relied on the People tab to check who was on their team, track account setup progress, as well as oversee external partners. Beyond that, they needed to be able easily remove and add people, grant permissions to \u00A0team members, block devices from accessing data, and more."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"So armed with insight into how users interacted with the tab\u2014and what they needed\u2014it was time to actually generate designs based on our customers\u2019 needs."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"img","img",1442687358),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"src","src",-1651076051),"https://saraharnegard.files.wordpress.com/2017/06/paper-prototypes.png",new cljs.core.Keyword(null,"alt","alt",-3214426),"paper prototypes"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"I created a series of prototypes that incorporated the main features we\u2019d need and captured the various types of users.\u00A0I used paper, pen, and scissors to create paper prototypes. Paper prototypes allowed for faster iteration because they are faster to create, and I could respond and adapt to feedback on the fly."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"img","img",1442687358),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"src","src",-1651076051),"img/sookasa/prototypes.png",new cljs.core.Keyword(null,"alt","alt",-3214426),"digital prototypes"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"Digital prototypes"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"I tested with all sorts of people: users who were pretty new to Sookasa, longtime customers, and people in coffee shops (in other words, people who \u00A0were totally unfamiliar with the product)."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"As designer, I\u2019m immersed in the product and the work I create. Feedback from outsiders is essential to the process of creating an intuitive learnable app design. It\u2019s not enough for it to look beautiful or work for my colleagues and me."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"The insight I gathered gave direction to new iterations and prototypes and identified other parts of the page that were confusing to users.\u00A0I typically gather feedback by giving people common tasks in the interface. But mostly, I\u2019m asking lots of questions."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"It was through this process that I uncovered that integrating the four collaborator types into combined tables made the concepts even more confusing. It was totally unclear why certain people had different information displayed."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"\n            It was a lightbulb moment for me.]\n\n            People seemed to need a design in which groups were clearly separated, not simply filtered or sorted by group.\n\n            In response, I created a prototype of a tabbed design with people differentiated two ways: First into the two main collaborator types (team and partner), and then into those who were current users and pending.\n\n            After dozens of prototypes and even more discovery interviews, we finally had a design that clicked. New testers and existing customers understood it right away."], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"img","img",1442687358),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"src","src",-1651076051),"https://saraharnegard.files.wordpress.com/2017/06/screenshot.png",new cljs.core.Keyword(null,"alt","alt",-3214426),"screenshot"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),"Our People tab feels easy and obvious now, but that belies the effort that customer-centric design techniques demand. It seems like a simple feature, but simplicity takes a lot of work. Our customer-focused design techniques also gave us confidence as we rolled out the new design to all of our users. We weren\u2019t biting our fingernails wondering how it\u2019d be received; we knew the revamped People tab would improve the workflow of administrators before it even launched.I\u2019m extremely proud about what we were able to achieve, but it\u2019s not the end. We\u2019ll be improving the page as we gain more insights, just like we do with every other feature."], null)], null)], null)], null)], null);
sarah_website.sookasa.content = (function sarah_website$sookasa$content(){
return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"header.header","header.header",1073294241),sarah_website.nav.hiccup], null),sarah_website.sookasa.sookasa_case,sarah_website.footer.hiccup], null);
});

//# sourceMappingURL=sookasa.js.map?rel=1497028559690